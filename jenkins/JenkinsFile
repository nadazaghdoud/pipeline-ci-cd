pipeline {
    agent any

    environment {
        INVENTORY = 'ansible/inventory/inventory.ini'
        ANSIBLE_HOST_KEY_CHECKING = 'False'

        // Jump (root) VM
        JUMP_HOST = 'root@172.26.32.11'

        // Target OpenStack controller VM
        TARGET_USER = 'openstack'
        TARGET_HOST = '10.0.0.11'

        // Make sure Jenkins can find the OpenStack Ansible collection
        ANSIBLE_COLLECTIONS_PATHS = '/var/lib/jenkins/.ansible/collections:/usr/share/ansible/collections'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/nadazaghdoud/pipeline-ci-cd.git'
            }
        }

        stage('Test SSH Connection via Jump Host') {
            steps {
                echo "=== Testing SSH Connection via Jump Host ==="
                sh """
                    ssh -o StrictHostKeyChecking=no ${JUMP_HOST} \\
                    'ssh -o StrictHostKeyChecking=no -i ~/.ssh/openstack_key.pem ${TARGET_USER}@${TARGET_HOST} "echo Connected!"'
                """
            }
        }

        stage('Run Placement Playbook') {
            steps {
                dir('ansible') {
                    echo "=== Running Placement Playbook ==="
                    sh """
                        ansible-playbook -i inventory/inventory.ini playbooks/placement.yml \\
                        -e "@group_vars/all.yml" \\
                        -e "mariadb_root_password=rootpass placement_db_pass=placepass"
                    """
                }
            }
        }

        stage('Run Horizon Playbook') {
            steps {
                dir('ansible') {
                    echo "=== Running Horizon Playbook ==="
                    sh """
                        ansible-playbook -i inventory/inventory.ini playbooks/horizon.yml \\
                        -e "@group_vars/all.yml"
                    """
                }
            }
        }
    }

    post {
        always {
            echo "Pipeline finished. Check logs for details."
        }
        success {
            echo "Placement + Horizon deployment succeeded ✅"
        }
        failure {
            echo "Deployment failed ❌"
        }
    }
}

